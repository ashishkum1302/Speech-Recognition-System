import pyttsx3
import speech_recognition as sr
import datetime
import wikipedia
import webbrowser
import os
import smtplib
import random
import sys
import wolframalpha
import psutil
import winshell
import pyjokes
import requests
import pyautogui as pg
import timeit
client = wolframalpha.Client("PXHKTR-5YEP43V3LJ ")
engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
# print(voices[1].id)
engine.setProperty('voices', voices[1].id)
def speak(audio):
 engine.say(audio)
 engine.runAndWait()
def wishMe():
 hour = int(datetime.datetime.now().hour)
 if hour >= 0 and hour < 12:
 speak("Good Morning sir")
 print("Good Morning sir")
 elif hour >= 12 and hour < 18:
 speak("Good Afternoon sir")
 print("Good Afternoon sir")
 else:
 speak("Good Evening sir")
 print("Good Evening sir")
 speak("I am Your Virtual Assistant. Sir. how may I help you")
def takeCommand():
 r = sr.Recognizer()
Page No -27
 with sr.Microphone() as source:
 print("listening...")
 r.pause_threshold = 1
 audio = r.listen(source)
 try:
 print("Recognizing...")
 query = r.recognize_google(audio, language='en-in')
 print(f"user said: {query} \n")
 except Exception as e:
 # print(e)
 print("Try once again please..")
 return " "
 return query
def SR_test(recognizer, microphone, audio):
 command = recognizer.recognize_google(audio)
 print(command)
t = timeit.Timer(lambda: SR_test(recognizer, microphone, audio))
print(t.timeit(0))
def secs2hours(secs):
 mm, ss = divmod(secs, 60)
 hh, mm = divmod(mm, 60)
 return "%dhour, %02d minute, %02s seconds" % (hh, mm, ss)
def wake_word(speak):
 wake_word = ["Hi Buddy", "Hey Ziva", "Hello Bro"]
 speak = speak.lower()
 for i in wake_word:
 if i in speak:
 return True
 return False
def screenshot():
 image = pg.screenshot()
 speak("screen shot taken")
 speak("what do you want to save it as?")
 filename = query()
 image.save(filename + ".png")
 speak("do you want me to show it")
 ans = query()
 if "yes" in ans:
 os.startfile(filename + ".png")
 else:
Page No -28
 speak("never mind")
def sendEmail(to, content):
 server = smtplib.SMTP("smtp.gmail.com", 587)
 server.ehlo()
 server.starttls()
 server.login("sdeepshikha103@gmail.com", "Deepshikha@123")
 server.sendmail("sdeepshikha103@gmail.com", to, content)
 server.close()
if __name__ == '__main__':
 wishMe()
 while True:
 # if 1:
 query = takeCommand().lower()
 if "wikipedia" in query:
 speak("Searching Wikipedia...")
 query = query.replace("wikipedia", " ")
 results = wikipedia.summary(query, sentences=2)
 speak("According to Wikipedia")
 print(results)
 speak(results)
 elif "open gmail" in query:
 speak('okay..')
 webbrowser.open("https://gmail.com")
 elif "what's up" in query or "how are you" in query:
 stMsgs = ["I am 100% fit sir!", "I am fine!", "Nice!", "Bingo Great Sir lets rock it!"]
 speak(random.choice(stMsgs))
 elif "youtube" in query:
 speak('okay..')
 webbrowser.open("https://youtube.com")
 elif "google" in query:
 speak('okay..')
 webbrowser.open("https://google.com")
 elif "github" in query:
 speak('okay..')
 webbrowser.open("https://github.com")
 elif "Facebook" in query:
 speak('okay..')
 webbrowser.open("https://facebook.com")
Page No -29
 elif "stack overflow" in query:
 speak("okay..")
 webbrowser.open("https://stackoverflow.com")
 elif "news" in query:
 speak("okay..")
 news= webbrowser.open_new_tab("https://timesofindia.indiatimes.com/home/headlines")
 speak("here are some headlines from times of india, happy reading")
 elif "hotstar" in query:
 speak("okay..")
 webbrowser.open("https://www.hotstar.com/in")
 elif "instagram" in query:
 speak("okay..")
 webbrowser.open("https://www.instagram.com/")
 elif "flipkart" in query:
 speak("okay..")
 webbrowser.open("https://www.flipkart.com/")
 elif "amazon" in query:
 speak("okay..")
 webbrowser.open("https://www.amazon.in/")
 elif "play music" in query:
 music_dir = "D:\Deepshikha\Music"
 songs = os.listdir(music_dir)
 print(songs)
 os.startfile(os.path.join(music_dir, songs[1]))
 elif "video" in query:
 video_dir = "D:\Deepshikha\Videos"
 video = os.listdir(video_dir)
 os.startfile(os.path.join(video_dir, video[1]))
 elif "time" in query:
 strTime = datetime.datetime.now().strftime("%H:%M:%S")
 speak(f"Hello, the time is {strTime} ")
 elif " find location" in query:
 location = speak("What is the location ?")
 url = "https://www.google.nl/maps/place" + place + "/&amp;"
 webbrowser.get().open(url)
 speak(f'Here is the location of' + place)
Page No -30
 elif "weather" in query:
 api_key = "3c1b87bfa7f9b6106d313cd7e64ee9f6"
 base_url = "http://api.openweathermap.org/data/2.5/weather?"
 speak("city name")
 print("city name : ")
 city_name = takeCommand()
 complete_url = base_url + "appid=" + api_key + "&q=" + city_name
 response = requests.get(complete_url)
 x = response.json()
 if x["cod"]!="404":
 y = x["main"]
 current_temperature = y["temp"]
 current_pressure = y["pressure"]
 current_humidity = y["humidity"]
 z = x["weather"]
 weather_description = z[0]["description"]
 print(" Temperature (in kelvin unit) = " +
 str(current_temperature) +
 "\n atmospheric pressure (in hPa unit) = " +
 str(current_pressure) +
 "\n humidity (in percentage) = " +
 str(current_humidity) +
 "\n description = " +
 str(weather_description))
 else:
 print(" City Not Found ")
 elif 'empty recycle bin' in query:
 winshell.recycle_bin().empty(confirm=False, show_progress=False, sound=True)
 speak("Recycle Bin Recycled")
 elif "thanks and quit" in query or "stop" in query or "take rest" in query:
 speak("Okay.. Bye Sir.. dhanyawad ..")
 sys.exit()
 elif "shutddown" in query:
 speak('okay.. Sir! shutting down your pc')
 os.system("shutdown/s")
 elif "restart" in query:
 speak("Okay.. Sir restarting your pc")
 os.system("shutdown/r")
 elif "hibernate" in query:
 speak("Hibernating")
 os.system("shutdown/h")
Page No -31
 elif "battery percent" in query:
 battery = psutil.sensors_battery()
 plugged = battery.power_plugged
 percent = str(battery.percent)
 if plugged == False:
 plugged == "not plugged in"
 else:
 plugged = "plugged in"
 print(percent + "percentage of battery", plugged)
 speak(percent)
 elif " search " in query:
 speak("what do you want to search")
 url = 'https://google.com/search?q=' + search
 webbrowser.get().open(url)
 speak("here is what i found for you" + search)
 elif "joke" in query:
 speak(pyjokes.get_joke())
 elif "mail" in query:
 try:
 speak("what should I say")
 content = takeCommand()
 to = "ashishyahoo556@gmail.com"
 sendEmail(to, content)
 speak("Email has been sent")
 except Exception as e:
 print(e)
 speak("Sorry Sir i am not able to send this email")
 elif "how are you" in query:
 speak("I am fine , Thank you")
 speak("How are you sir")
 elif "fine" in query or "good" in query:
 speak("It is good to know that you are fine")
 elif "who made you" in query:
 speak("i was built by Information Technology Department")
 else:
 query = query
 speak("searching..")
 try:
 res = client.query(query)
 results = next(res.results).text
Page No -32
 speak("Wolfram-Alpha says...")
 speak("okay got it..")
 print(results)
 speak(results)
 except Exception as e:
 print(e)
 speak("Sorry Sir I am not able to get this")
 speak("Next command sir")